{"level":"info","message":"::1 - - [03/Jun/2025:17:56:19 +0000] \"GET /api/cities?query=Vilniuss HTTP/1.1\" 200 2 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:56:19.345Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:56:19 +0000] \"GET /api/cities?query=Vilniusss HTTP/1.1\" 200 2 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:56:19.455Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:56:19 +0000] \"GET /api/cities?query=Vilniussss HTTP/1.1\" 200 2 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:56:19.584Z"}
{"level":"info","message":"Hourly forecast requested for city: Vilniussss","timestamp":"2025-06-03T17:56:20.006Z"}
{"level":"error","message":"Error in getHourlyForecastByCity: AxiosError: Request failed with status code 404\n    at settle (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:2049:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:3166:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:4276:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fetchHourlyForecastByCity (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\models\\forecastModel.js:28:20)\n    at async exports.getHourlyForecastByCity (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\controllers\\forecastController.js:59:18) {\n  [stack]: [Getter/Setter],\n  message: 'Request failed with status code 404',\n  name: 'AxiosError',\n  code: 'ERR_BAD_REQUEST',\n  config: {\n    transitional: {\n      silentJSONParsing: true,\n      forcedJSONParsing: true,\n      clarifyTimeoutError: false\n    },\n    adapter: [ 'xhr', 'http', 'fetch', [length]: 3 ],\n    transformRequest: [\n      <ref *1> [Function: transformRequest] {\n        [length]: 2,\n        [name]: 'transformRequest',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      [length]: 1\n    ],\n    transformResponse: [\n      <ref *2> [Function: transformResponse] {\n        [length]: 1,\n        [name]: 'transformResponse',\n        [prototype]: { [constructor]: [Circular *2] }\n      },\n      [length]: 1\n    ],\n    timeout: 0,\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n    maxContentLength: -1,\n    maxBodyLength: -1,\n    env: {\n      FormData: <ref *3> [Function: FormData] {\n        [length]: 1,\n        [name]: 'FormData',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: CombinedStream {\n          [constructor]: [Circular *3],\n          append: [Function],\n          _trackLength: [Function],\n          _lengthRetriever: [Function],\n          _multiPartHeader: [Function],\n          _getContentDisposition: [Function],\n          _getContentType: [Function],\n          _multiPartFooter: [Function],\n          _lastBoundary: [Function],\n          getHeaders: [Function],\n          setBoundary: [Function],\n          getBoundary: [Function],\n          getBuffer: [Function],\n          _generateBoundary: [Function],\n          getLengthSync: [Function],\n          hasKnownLength: [Function],\n          getLength: [Function],\n          submit: [Function],\n          _error: [Function],\n          toString: [Function],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        [super_]: [Function: CombinedStream] {\n          [length]: 0,\n          [name]: 'CombinedStream',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Stream],\n          [super_]: [Function],\n          create: [Function],\n          isStreamLike: [Function]\n        },\n        LINE_BREAK: '\\r\\n',\n        DEFAULT_CONTENT_TYPE: 'application/octet-stream',\n        [Symbol(Symbol.toStringTag)]: 'FormData'\n      },\n      Blob: <ref *4> [class Blob] {\n        [length]: 0,\n        [name]: 'Blob',\n        [prototype]: {\n          [constructor]: [Circular *4],\n          type: [Getter],\n          size: [Getter],\n          slice: [Function],\n          arrayBuffer: [Function],\n          text: [Function],\n          bytes: [Function],\n          stream: [Function],\n          [Symbol(nodejs.util.inspect.custom)]: [Function],\n          [Symbol(messaging_clone_symbol)]: [Function],\n          [Symbol(messaging_deserialize_symbol)]: [Function],\n          [Symbol(Symbol.toStringTag)]: 'Blob'\n        }\n      }\n    },\n    validateStatus: <ref *5> [Function: validateStatus] {\n      [length]: 1,\n      [name]: 'validateStatus',\n      [prototype]: { [constructor]: [Circular *5] }\n    },\n    headers: Object [AxiosHeaders] {\n      Accept: 'application/json, text/plain, */*',\n      'Content-Type': undefined,\n      'User-Agent': 'axios/1.9.0',\n      'Accept-Encoding': 'gzip, compress, deflate, br',\n      [set]: [Getter/Setter],\n      [get]: [Getter/Setter],\n      [has]: [Getter/Setter],\n      [delete]: [Getter/Setter],\n      [clear]: [Getter/Setter],\n      [normalize]: [Getter/Setter],\n      [concat]: [Getter/Setter],\n      [toJSON]: [Getter/Setter],\n      [toString]: [Getter/Setter],\n      [getSetCookie]: [Getter/Setter],\n      [getContentType]: [Getter/Setter],\n      [setContentType]: [Getter/Setter],\n      [hasContentType]: [Getter/Setter],\n      [getContentLength]: [Getter/Setter],\n      [setContentLength]: [Getter/Setter],\n      [hasContentLength]: [Getter/Setter],\n      [getAccept]: [Getter/Setter],\n      [setAccept]: [Getter/Setter],\n      [hasAccept]: [Getter/Setter],\n      [getAcceptEncoding]: [Getter/Setter],\n      [setAcceptEncoding]: [Getter/Setter],\n      [hasAcceptEncoding]: [Getter/Setter],\n      [getUserAgent]: [Getter/Setter],\n      [setUserAgent]: [Getter/Setter],\n      [hasUserAgent]: [Getter/Setter],\n      [getAuthorization]: [Getter/Setter],\n      [setAuthorization]: [Getter/Setter],\n      [hasAuthorization]: [Getter/Setter],\n      [Symbol(Symbol.toStringTag)]: [Getter]\n    },\n    params: {\n      q: 'Vilniussss',\n      appid: '7caca20ad4f3e11f4ab0ea0b56f9a0d7',\n      units: 'metric',\n      lang: 'en'\n    },\n    method: 'get',\n    url: 'https://pro.openweathermap.org/data/2.5/forecast/hourly',\n    allowAbsoluteUrls: true,\n    data: undefined\n  },\n  request: <ref *14> ClientRequest {\n    _events: [Object: null prototype] {\n      abort: <ref *6> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *6] }\n      },\n      aborted: <ref *7> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *7] }\n      },\n      connect: <ref *8> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      error: <ref *9> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *9] }\n      },\n      socket: <ref *10> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *10] }\n      },\n      timeout: <ref *11> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *11] }\n      },\n      finish: <ref *12> [Function: requestOnFinish] {\n        [length]: 0,\n        [name]: 'requestOnFinish',\n        [prototype]: { [constructor]: [Circular *12] }\n      }\n    },\n    _eventsCount: 7,\n    _maxListeners: undefined,\n    outputData: [ [length]: 0 ],\n    outputSize: 0,\n    writable: true,\n    destroyed: true,\n    _last: true,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: false,\n    sendDate: false,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    strictContentLength: false,\n    _contentLength: 0,\n    _hasBody: true,\n    _trailer: '',\n    finished: true,\n    _headerSent: true,\n    _closed: true,\n    _header: 'GET /data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en HTTP/1.1\\r\\n' +\n      'Accept: application/json, text/plain, */*\\r\\n' +\n      'User-Agent: axios/1.9.0\\r\\n' +\n      'Accept-Encoding: gzip, compress, deflate, br\\r\\n' +\n      'Host: pro.openweathermap.org\\r\\n' +\n      'Connection: keep-alive\\r\\n' +\n      '\\r\\n',\n    _keepAliveTimeout: 0,\n    _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n    agent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        scheduling: 'lifo',\n        timeout: 5000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'pro.openweathermap.org:443:::::::::::::::::::::': [ [TLSSocket], [length]: 1 ]\n      },\n      keepAliveMsecs: 1000,\n      keepAlive: true,\n      maxSockets: Infinity,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      maxCachedSessions: 100,\n      _sessionCache: {\n        map: {\n          'pro.openweathermap.org:443:::::::::::::::::::::': <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n          'api.openweathermap.org:443:::::::::::::::::::::': <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 c5 66 27 2a f8 26 4d 91 5b 18 b0 54 4a 35 92 b5 7a 98 5a 54 08 72 9c bb a9 f0 a2 03 85 a7 66 79 04 ... 1922 more bytes>\n        },\n        list: [\n          'pro.openweathermap.org:443:::::::::::::::::::::',\n          'api.openweathermap.org:443:::::::::::::::::::::',\n          [length]: 2\n        ]\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    socketPath: undefined,\n    method: 'GET',\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    joinDuplicateHeaders: undefined,\n    path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n    _ended: true,\n    res: IncomingMessage {\n      _events: {\n        close: undefined,\n        error: [Function: handleStreamError] {\n          [length]: 1,\n          [name]: 'handleStreamError',\n          [prototype]: [Object]\n        },\n        data: [Function: handleStreamData] {\n          [length]: 1,\n          [name]: 'handleStreamData',\n          [prototype]: [Object]\n        },\n        end: [ [Function], [Function], [length]: 2 ],\n        readable: undefined,\n        finish: undefined,\n        aborted: [Function: handlerStreamAborted] {\n          [length]: 0,\n          [name]: 'handlerStreamAborted',\n          [prototype]: [Object]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 16384,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 194779004,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'Server',\n        'openresty',\n        'Date',\n        'Tue, 03 Jun 2025 17:56:20 GMT',\n        'Content-Type',\n        'application/json; charset=utf-8',\n        'Content-Length',\n        '40',\n        'Connection',\n        'keep-alive',\n        'X-Cache-Key',\n        '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n        'Access-Control-Allow-Origin',\n        '*',\n        'Access-Control-Allow-Credentials',\n        'true',\n        'Access-Control-Allow-Methods',\n        'GET, POST',\n        [length]: 18\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: '',\n      method: null,\n      statusCode: 404,\n      statusMessage: 'Not Found',\n      client: <ref *13> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'pro.openweathermap.org',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'pro.openweathermap.org',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 882398,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 2949,\n          [Symbol(triggerId)]: 2947,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: null,\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: 443,\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          _defaultAgent: [Agent],\n          host: 'pro.openweathermap.org',\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          servername: 'pro.openweathermap.org',\n          _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: [Circular *14],\n      _eventsCount: 4,\n      responseUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      redirects: [ [length]: 0 ],\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        server: 'openresty',\n        date: 'Tue, 03 Jun 2025 17:56:20 GMT',\n        'content-type': 'application/json; charset=utf-8',\n        'content-length': '40',\n        connection: 'keep-alive',\n        'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n        'access-control-allow-origin': '*',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-methods': 'GET, POST'\n      },\n      [Symbol(kHeadersCount)]: 18,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    aborted: false,\n    timeoutCb: null,\n    upgradeOrConnect: false,\n    parser: null,\n    maxHeadersCount: null,\n    reusedSocket: false,\n    host: 'pro.openweathermap.org',\n    protocol: 'https:',\n    _redirectable: Writable {\n      _events: {\n        close: undefined,\n        error: [Function: handleRequestError] {\n          [length]: 1,\n          [name]: 'handleRequestError',\n          [prototype]: [Object]\n        },\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        response: [Function: handleResponse] {\n          [length]: 1,\n          [name]: 'handleResponse',\n          [prototype]: [Object]\n        },\n        socket: [Function: handleRequestSocket] {\n          [length]: 1,\n          [name]: 'handleRequestSocket',\n          [prototype]: [Object]\n        }\n      },\n      _writableState: WritableState {\n        highWaterMark: 16384,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 17580812,\n        [Symbol(kBufferedValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      _maxListeners: undefined,\n      _options: {\n        maxRedirects: 21,\n        maxBodyLength: Infinity,\n        protocol: 'https:',\n        path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        method: 'GET',\n        headers: [Object: null prototype] {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': 'axios/1.9.0',\n          'Accept-Encoding': 'gzip, compress, deflate, br'\n        },\n        agents: { http: undefined, https: undefined },\n        auth: undefined,\n        family: undefined,\n        beforeRedirect: [Function: dispatchBeforeRedirect] {\n          [length]: 2,\n          [name]: 'dispatchBeforeRedirect',\n          [prototype]: [Object]\n        },\n        beforeRedirects: { proxy: [Function] },\n        hostname: 'pro.openweathermap.org',\n        port: '',\n        agent: undefined,\n        nativeProtocols: { 'http:': [Object], 'https:': [Object] },\n        pathname: '/data/2.5/forecast/hourly',\n        search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en'\n      },\n      _ended: true,\n      _ending: true,\n      _redirectCount: 0,\n      _redirects: [ [length]: 0 ],\n      _requestBodyLength: 0,\n      _requestBodyBuffers: [ [length]: 0 ],\n      _eventsCount: 3,\n      _onNativeResponse: <ref *15> [Function (anonymous)] {\n        [length]: 1,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      _currentRequest: [Circular *14],\n      _currentUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [aborted]: [Getter],\n      [connection]: [Getter],\n      [socket]: [Getter],\n      _writev: null,\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [writableLength]: [Getter],\n      [errored]: [Getter],\n      [writableAborted]: [Getter]\n    },\n    [Symbol(shapeMode)]: false,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n    [Symbol(kChunkedLength)]: 0,\n    [Symbol(kSocket)]: <ref *13> TLSSocket {\n      _tlsOptions: {\n        allowHalfOpen: undefined,\n        pipe: false,\n        secureContext: SecureContext { context: SecureContext {} },\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: true,\n        session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined,\n        enableTrace: undefined,\n        pskCallback: undefined,\n        highWaterMark: undefined,\n        onread: undefined,\n        signal: undefined\n      },\n      _secureEstablished: true,\n      _securePending: false,\n      _newSessionPending: false,\n      _controlReleased: true,\n      secureConnecting: false,\n      _SNICallback: null,\n      servername: 'pro.openweathermap.org',\n      alpnProtocol: false,\n      authorized: true,\n      authorizationError: null,\n      encrypted: true,\n      _events: [Object: null prototype] {\n        close: [ [Function], [Function], [Function], [length]: 3 ],\n        end: [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        newListener: [Function: keylogNewListener] {\n          [length]: 1,\n          [name]: 'keylogNewListener',\n          [prototype]: [Object]\n        },\n        connect: undefined,\n        secure: [Function: onConnectSecure] {\n          [length]: 0,\n          [name]: 'onConnectSecure',\n          [prototype]: [Object]\n        },\n        session: [Function (anonymous)] { [length]: 1, [name]: '' },\n        free: [Function: onFree] {\n          [length]: 0,\n          [name]: 'onFree',\n          [prototype]: [Object]\n        },\n        timeout: [Function: onTimeout] {\n          [length]: 0,\n          [name]: 'onTimeout',\n          [prototype]: [Object]\n        },\n        agentRemove: [Function: onRemove] {\n          [length]: 0,\n          [name]: 'onRemove',\n          [prototype]: [Object]\n        },\n        data: undefined,\n        drain: undefined\n      },\n      _eventsCount: 9,\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: 'pro.openweathermap.org',\n      _closeAfterHandlingError: false,\n      _readableState: ReadableState {\n        highWaterMark: 16384,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 60303620,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 16384,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 17563908,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: false,\n      _maxListeners: undefined,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: undefined,\n      _server: null,\n      ssl: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      _requestCert: true,\n      _rejectUnauthorized: true,\n      timeout: 5000,\n      parser: null,\n      _httpMessage: null,\n      [Symbol(alpncallback)]: null,\n      [Symbol(res)]: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      [Symbol(verified)]: true,\n      [Symbol(pendingSession)]: null,\n      [Symbol(async_id_symbol)]: -1,\n      [Symbol(kHandle)]: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 5000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 882398,\n        _onTimeout: [Function],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 2949,\n        [Symbol(triggerId)]: 2947,\n        [Symbol(kAsyncContextFrame)]: undefined\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: true,\n      [Symbol(kSetKeepAliveInitialDelay)]: 1,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(connect-options)]: {\n        rejectUnauthorized: true,\n        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        minDHSize: 1024,\n        session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n        maxRedirects: 21,\n        maxBodyLength: Infinity,\n        protocol: 'https:',\n        path: null,\n        method: 'GET',\n        headers: [Object: null prototype] {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': 'axios/1.9.0',\n          'Accept-Encoding': 'gzip, compress, deflate, br'\n        },\n        agents: { http: undefined, https: undefined },\n        auth: undefined,\n        family: undefined,\n        beforeRedirect: [Function: dispatchBeforeRedirect] {\n          [length]: 2,\n          [name]: 'dispatchBeforeRedirect',\n          [prototype]: [Object]\n        },\n        beforeRedirects: { proxy: [Function] },\n        hostname: 'pro.openweathermap.org',\n        port: 443,\n        agent: undefined,\n        nativeProtocols: { 'http:': [Object], 'https:': [Object] },\n        pathname: '/data/2.5/forecast/hourly',\n        search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        _defaultAgent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        host: 'pro.openweathermap.org',\n        keepAlive: true,\n        scheduling: 'lifo',\n        timeout: 5000,\n        noDelay: true,\n        servername: 'pro.openweathermap.org',\n        _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n        encoding: null,\n        keepAliveInitialDelay: 1000\n      },\n      [_connecting]: [Getter],\n      [pending]: [Getter],\n      [readyState]: [Getter],\n      [bufferSize]: [Getter],\n      bytesRead: [Getter],\n      remoteAddress: [Getter],\n      remoteFamily: [Getter],\n      remotePort: [Getter],\n      localAddress: [Getter],\n      localPort: [Getter],\n      localFamily: [Getter],\n      _bytesDispatched: [Getter],\n      bytesWritten: [Getter],\n      [_handle]: [Getter/Setter],\n      [Symbol(kUpdateTimer)]: [Getter],\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      accept: [ 'Accept', 'application/json, text/plain, */*', [length]: 2 ],\n      'user-agent': [ 'User-Agent', 'axios/1.9.0', [length]: 2 ],\n      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br', [length]: 2 ],\n      host: [ 'Host', 'pro.openweathermap.org', [length]: 2 ]\n    },\n    [Symbol(errored)]: null,\n    [Symbol(kHighWaterMark)]: 16384,\n    [Symbol(kRejectNonStandardBodyWrites)]: false,\n    [Symbol(kUniqueHeaders)]: null,\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [writableFinished]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableLength]: [Getter],\n    [writableHighWaterMark]: [Getter],\n    [writableCorked]: [Getter],\n    [_headers]: [Getter/Setter],\n    [connection]: [Getter/Setter],\n    [socket]: [Getter/Setter],\n    [_headerNames]: [Getter/Setter],\n    headersSent: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter]\n  },\n  response: {\n    status: 404,\n    statusText: 'Not Found',\n    headers: Object [AxiosHeaders] {\n      server: 'openresty',\n      date: 'Tue, 03 Jun 2025 17:56:20 GMT',\n      'content-type': 'application/json; charset=utf-8',\n      'content-length': '40',\n      connection: 'keep-alive',\n      'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n      'access-control-allow-origin': '*',\n      'access-control-allow-credentials': 'true',\n      'access-control-allow-methods': 'GET, POST',\n      [set]: [Getter/Setter],\n      [get]: [Getter/Setter],\n      [has]: [Getter/Setter],\n      [delete]: [Getter/Setter],\n      [clear]: [Getter/Setter],\n      [normalize]: [Getter/Setter],\n      [concat]: [Getter/Setter],\n      [toJSON]: [Getter/Setter],\n      [toString]: [Getter/Setter],\n      [getSetCookie]: [Getter/Setter],\n      [getContentType]: [Getter/Setter],\n      [setContentType]: [Getter/Setter],\n      [hasContentType]: [Getter/Setter],\n      [getContentLength]: [Getter/Setter],\n      [setContentLength]: [Getter/Setter],\n      [hasContentLength]: [Getter/Setter],\n      [getAccept]: [Getter/Setter],\n      [setAccept]: [Getter/Setter],\n      [hasAccept]: [Getter/Setter],\n      [getAcceptEncoding]: [Getter/Setter],\n      [setAcceptEncoding]: [Getter/Setter],\n      [hasAcceptEncoding]: [Getter/Setter],\n      [getUserAgent]: [Getter/Setter],\n      [setUserAgent]: [Getter/Setter],\n      [hasUserAgent]: [Getter/Setter],\n      [getAuthorization]: [Getter/Setter],\n      [setAuthorization]: [Getter/Setter],\n      [hasAuthorization]: [Getter/Setter],\n      [Symbol(Symbol.toStringTag)]: [Getter]\n    },\n    config: {\n      transitional: {\n        silentJSONParsing: true,\n        forcedJSONParsing: true,\n        clarifyTimeoutError: false\n      },\n      adapter: [ 'xhr', 'http', 'fetch', [length]: 3 ],\n      transformRequest: [\n        <ref *1> [Function: transformRequest] {\n          [length]: 2,\n          [name]: 'transformRequest',\n          [prototype]: [Object]\n        },\n        [length]: 1\n      ],\n      transformResponse: [\n        <ref *2> [Function: transformResponse] {\n          [length]: 1,\n          [name]: 'transformResponse',\n          [prototype]: [Object]\n        },\n        [length]: 1\n      ],\n      timeout: 0,\n      xsrfCookieName: 'XSRF-TOKEN',\n      xsrfHeaderName: 'X-XSRF-TOKEN',\n      maxContentLength: -1,\n      maxBodyLength: -1,\n      env: {\n        FormData: <ref *3> [Function: FormData] {\n          [length]: 1,\n          [name]: 'FormData',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [CombinedStream],\n          [super_]: [Function],\n          LINE_BREAK: '\\r\\n',\n          DEFAULT_CONTENT_TYPE: 'application/octet-stream',\n          [Symbol(Symbol.toStringTag)]: 'FormData'\n        },\n        Blob: <ref *4> [class Blob] {\n          [length]: 0,\n          [name]: 'Blob',\n          [prototype]: [Object]\n        }\n      },\n      validateStatus: <ref *5> [Function: validateStatus] {\n        [length]: 1,\n        [name]: 'validateStatus',\n        [prototype]: { [constructor]: [Circular *5] }\n      },\n      headers: Object [AxiosHeaders] {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': undefined,\n        'User-Agent': 'axios/1.9.0',\n        'Accept-Encoding': 'gzip, compress, deflate, br',\n        [set]: [Getter/Setter],\n        [get]: [Getter/Setter],\n        [has]: [Getter/Setter],\n        [delete]: [Getter/Setter],\n        [clear]: [Getter/Setter],\n        [normalize]: [Getter/Setter],\n        [concat]: [Getter/Setter],\n        [toJSON]: [Getter/Setter],\n        [toString]: [Getter/Setter],\n        [getSetCookie]: [Getter/Setter],\n        [getContentType]: [Getter/Setter],\n        [setContentType]: [Getter/Setter],\n        [hasContentType]: [Getter/Setter],\n        [getContentLength]: [Getter/Setter],\n        [setContentLength]: [Getter/Setter],\n        [hasContentLength]: [Getter/Setter],\n        [getAccept]: [Getter/Setter],\n        [setAccept]: [Getter/Setter],\n        [hasAccept]: [Getter/Setter],\n        [getAcceptEncoding]: [Getter/Setter],\n        [setAcceptEncoding]: [Getter/Setter],\n        [hasAcceptEncoding]: [Getter/Setter],\n        [getUserAgent]: [Getter/Setter],\n        [setUserAgent]: [Getter/Setter],\n        [hasUserAgent]: [Getter/Setter],\n        [getAuthorization]: [Getter/Setter],\n        [setAuthorization]: [Getter/Setter],\n        [hasAuthorization]: [Getter/Setter],\n        [Symbol(Symbol.toStringTag)]: [Getter]\n      },\n      params: {\n        q: 'Vilniussss',\n        appid: '7caca20ad4f3e11f4ab0ea0b56f9a0d7',\n        units: 'metric',\n        lang: 'en'\n      },\n      method: 'get',\n      url: 'https://pro.openweathermap.org/data/2.5/forecast/hourly',\n      allowAbsoluteUrls: true,\n      data: undefined\n    },\n    request: <ref *14> ClientRequest {\n      _events: [Object: null prototype] {\n        abort: <ref *6> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        aborted: <ref *7> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        connect: <ref *8> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        error: <ref *9> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        socket: <ref *10> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        timeout: <ref *11> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        finish: <ref *12> [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 7,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en HTTP/1.1\\r\\n' +\n        'Accept: application/json, text/plain, */*\\r\\n' +\n        'User-Agent: axios/1.9.0\\r\\n' +\n        'Accept-Encoding: gzip, compress, deflate, br\\r\\n' +\n        'Host: pro.openweathermap.org\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'pro.openweathermap.org:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      _ended: true,\n      res: IncomingMessage {\n        _events: {\n          close: undefined,\n          error: [Function],\n          data: [Function],\n          end: [Array],\n          readable: undefined,\n          finish: undefined,\n          aborted: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 194779004,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'Server',\n          'openresty',\n          'Date',\n          'Tue, 03 Jun 2025 17:56:20 GMT',\n          'Content-Type',\n          'application/json; charset=utf-8',\n          'Content-Length',\n          '40',\n          'Connection',\n          'keep-alive',\n          'X-Cache-Key',\n          '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n          'Access-Control-Allow-Origin',\n          '*',\n          'Access-Control-Allow-Credentials',\n          'true',\n          'Access-Control-Allow-Methods',\n          'GET, POST',\n          [length]: 18\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: '',\n        method: null,\n        statusCode: 404,\n        statusMessage: 'Not Found',\n        client: <ref *13> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'pro.openweathermap.org',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'pro.openweathermap.org',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 882398,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 2949,\n            [Symbol(triggerId)]: 2947,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *14],\n        _eventsCount: 4,\n        responseUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        redirects: [ [length]: 0 ],\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          server: 'openresty',\n          date: 'Tue, 03 Jun 2025 17:56:20 GMT',\n          'content-type': 'application/json; charset=utf-8',\n          'content-length': '40',\n          connection: 'keep-alive',\n          'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n          'access-control-allow-origin': '*',\n          'access-control-allow-credentials': 'true',\n          'access-control-allow-methods': 'GET, POST'\n        },\n        [Symbol(kHeadersCount)]: 18,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'pro.openweathermap.org',\n      protocol: 'https:',\n      _redirectable: Writable {\n        _events: {\n          close: undefined,\n          error: [Function],\n          prefinish: undefined,\n          finish: undefined,\n          drain: undefined,\n          response: [Function],\n          socket: [Function]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17580812,\n          [Symbol(kBufferedValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        _maxListeners: undefined,\n        _options: {\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: '',\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en'\n        },\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [ [length]: 0 ],\n        _requestBodyLength: 0,\n        _requestBodyBuffers: [ [length]: 0 ],\n        _eventsCount: 3,\n        _onNativeResponse: <ref *15> [Function (anonymous)] {\n          [length]: 1,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        _currentRequest: [Circular *14],\n        _currentUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [aborted]: [Getter],\n        [connection]: [Getter],\n        [socket]: [Getter],\n        _writev: null,\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [writableLength]: [Getter],\n        [errored]: [Getter],\n        [writableAborted]: [Getter]\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *13> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'pro.openweathermap.org',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'pro.openweathermap.org',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 882398,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 2949,\n          [Symbol(triggerId)]: 2947,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 4e d6 53 67 b9 65 c3 f4 9e eb c8 14 30 1b 3f 3d 62 7f e9 db 33 78 6d 35 f6 5f 29 48 5e 2f 55 0d 04 ... 1922 more bytes>,\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: null,\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: 443,\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          _defaultAgent: [Agent],\n          host: 'pro.openweathermap.org',\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          servername: 'pro.openweathermap.org',\n          _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        accept: [ 'Accept', 'application/json, text/plain, */*', [length]: 2 ],\n        'user-agent': [ 'User-Agent', 'axios/1.9.0', [length]: 2 ],\n        'accept-encoding': [\n          'Accept-Encoding',\n          'gzip, compress, deflate, br',\n          [length]: 2\n        ],\n        host: [ 'Host', 'pro.openweathermap.org', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 16384,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    data: { cod: '404', message: 'city not found' }\n  },\n  status: 404,\n  [isAxiosError]: true\n}","timestamp":"2025-06-03T17:56:20.216Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:56:20 +0000] \"GET /api/forecast/hourly/Vilniussss HTTP/1.1\" 500 89 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:56:20.251Z"}
{"level":"info","message":"Hourly forecast requested for city: Vilniussss","timestamp":"2025-06-03T17:57:29.749Z"}
{"level":"error","message":"Error in getHourlyForecastByCity: AxiosError: Request failed with status code 404\n    at settle (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:2049:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:3166:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\node_modules\\axios\\dist\\node\\axios.cjs:4276:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fetchHourlyForecastByCity (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\models\\forecastModel.js:28:20)\n    at async exports.getHourlyForecastByCity (C:\\Users\\raimo\\Desktop\\viko\\AirForce\\BackEnd\\controllers\\forecastController.js:59:18) {\n  [stack]: [Getter/Setter],\n  message: 'Request failed with status code 404',\n  name: 'AxiosError',\n  code: 'ERR_BAD_REQUEST',\n  config: {\n    transitional: {\n      silentJSONParsing: true,\n      forcedJSONParsing: true,\n      clarifyTimeoutError: false\n    },\n    adapter: [ 'xhr', 'http', 'fetch', [length]: 3 ],\n    transformRequest: [\n      <ref *1> [Function: transformRequest] {\n        [length]: 2,\n        [name]: 'transformRequest',\n        [prototype]: { [constructor]: [Circular *1] }\n      },\n      [length]: 1\n    ],\n    transformResponse: [\n      <ref *2> [Function: transformResponse] {\n        [length]: 1,\n        [name]: 'transformResponse',\n        [prototype]: { [constructor]: [Circular *2] }\n      },\n      [length]: 1\n    ],\n    timeout: 0,\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n    maxContentLength: -1,\n    maxBodyLength: -1,\n    env: {\n      FormData: <ref *3> [Function: FormData] {\n        [length]: 1,\n        [name]: 'FormData',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: CombinedStream {\n          [constructor]: [Circular *3],\n          append: [Function],\n          _trackLength: [Function],\n          _lengthRetriever: [Function],\n          _multiPartHeader: [Function],\n          _getContentDisposition: [Function],\n          _getContentType: [Function],\n          _multiPartFooter: [Function],\n          _lastBoundary: [Function],\n          getHeaders: [Function],\n          setBoundary: [Function],\n          getBoundary: [Function],\n          getBuffer: [Function],\n          _generateBoundary: [Function],\n          getLengthSync: [Function],\n          hasKnownLength: [Function],\n          getLength: [Function],\n          submit: [Function],\n          _error: [Function],\n          toString: [Function],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        [super_]: [Function: CombinedStream] {\n          [length]: 0,\n          [name]: 'CombinedStream',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Stream],\n          [super_]: [Function],\n          create: [Function],\n          isStreamLike: [Function]\n        },\n        LINE_BREAK: '\\r\\n',\n        DEFAULT_CONTENT_TYPE: 'application/octet-stream',\n        [Symbol(Symbol.toStringTag)]: 'FormData'\n      },\n      Blob: <ref *4> [class Blob] {\n        [length]: 0,\n        [name]: 'Blob',\n        [prototype]: {\n          [constructor]: [Circular *4],\n          type: [Getter],\n          size: [Getter],\n          slice: [Function],\n          arrayBuffer: [Function],\n          text: [Function],\n          bytes: [Function],\n          stream: [Function],\n          [Symbol(nodejs.util.inspect.custom)]: [Function],\n          [Symbol(messaging_clone_symbol)]: [Function],\n          [Symbol(messaging_deserialize_symbol)]: [Function],\n          [Symbol(Symbol.toStringTag)]: 'Blob'\n        }\n      }\n    },\n    validateStatus: <ref *5> [Function: validateStatus] {\n      [length]: 1,\n      [name]: 'validateStatus',\n      [prototype]: { [constructor]: [Circular *5] }\n    },\n    headers: Object [AxiosHeaders] {\n      Accept: 'application/json, text/plain, */*',\n      'Content-Type': undefined,\n      'User-Agent': 'axios/1.9.0',\n      'Accept-Encoding': 'gzip, compress, deflate, br',\n      [set]: [Getter/Setter],\n      [get]: [Getter/Setter],\n      [has]: [Getter/Setter],\n      [delete]: [Getter/Setter],\n      [clear]: [Getter/Setter],\n      [normalize]: [Getter/Setter],\n      [concat]: [Getter/Setter],\n      [toJSON]: [Getter/Setter],\n      [toString]: [Getter/Setter],\n      [getSetCookie]: [Getter/Setter],\n      [getContentType]: [Getter/Setter],\n      [setContentType]: [Getter/Setter],\n      [hasContentType]: [Getter/Setter],\n      [getContentLength]: [Getter/Setter],\n      [setContentLength]: [Getter/Setter],\n      [hasContentLength]: [Getter/Setter],\n      [getAccept]: [Getter/Setter],\n      [setAccept]: [Getter/Setter],\n      [hasAccept]: [Getter/Setter],\n      [getAcceptEncoding]: [Getter/Setter],\n      [setAcceptEncoding]: [Getter/Setter],\n      [hasAcceptEncoding]: [Getter/Setter],\n      [getUserAgent]: [Getter/Setter],\n      [setUserAgent]: [Getter/Setter],\n      [hasUserAgent]: [Getter/Setter],\n      [getAuthorization]: [Getter/Setter],\n      [setAuthorization]: [Getter/Setter],\n      [hasAuthorization]: [Getter/Setter],\n      [Symbol(Symbol.toStringTag)]: [Getter]\n    },\n    params: {\n      q: 'Vilniussss',\n      appid: '7caca20ad4f3e11f4ab0ea0b56f9a0d7',\n      units: 'metric',\n      lang: 'en'\n    },\n    method: 'get',\n    url: 'https://pro.openweathermap.org/data/2.5/forecast/hourly',\n    allowAbsoluteUrls: true,\n    data: undefined\n  },\n  request: <ref *14> ClientRequest {\n    _events: [Object: null prototype] {\n      abort: <ref *6> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *6] }\n      },\n      aborted: <ref *7> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *7] }\n      },\n      connect: <ref *8> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      error: <ref *9> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *9] }\n      },\n      socket: <ref *10> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *10] }\n      },\n      timeout: <ref *11> [Function (anonymous)] {\n        [length]: 3,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *11] }\n      },\n      finish: <ref *12> [Function: requestOnFinish] {\n        [length]: 0,\n        [name]: 'requestOnFinish',\n        [prototype]: { [constructor]: [Circular *12] }\n      }\n    },\n    _eventsCount: 7,\n    _maxListeners: undefined,\n    outputData: [ [length]: 0 ],\n    outputSize: 0,\n    writable: true,\n    destroyed: true,\n    _last: true,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: false,\n    sendDate: false,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    strictContentLength: false,\n    _contentLength: 0,\n    _hasBody: true,\n    _trailer: '',\n    finished: true,\n    _headerSent: true,\n    _closed: true,\n    _header: 'GET /data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en HTTP/1.1\\r\\n' +\n      'Accept: application/json, text/plain, */*\\r\\n' +\n      'User-Agent: axios/1.9.0\\r\\n' +\n      'Accept-Encoding: gzip, compress, deflate, br\\r\\n' +\n      'Host: pro.openweathermap.org\\r\\n' +\n      'Connection: keep-alive\\r\\n' +\n      '\\r\\n',\n    _keepAliveTimeout: 0,\n    _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n    agent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        scheduling: 'lifo',\n        timeout: 5000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'pro.openweathermap.org:443:::::::::::::::::::::': [ [TLSSocket], [length]: 1 ]\n      },\n      keepAliveMsecs: 1000,\n      keepAlive: true,\n      maxSockets: Infinity,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      maxCachedSessions: 100,\n      _sessionCache: {\n        map: {\n          'pro.openweathermap.org:443:::::::::::::::::::::': <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 83 a8 7f 68 3a e4 c5 68 bc 95 99 a8 6b ee e7 fc f2 ee ba 89 75 39 ee 8a db 0b 22 ea e5 19 9f 2c 04 ... 1923 more bytes>,\n          'api.openweathermap.org:443:::::::::::::::::::::': <Buffer 30 82 07 b0 02 01 01 02 02 03 04 04 02 13 02 04 20 c5 66 27 2a f8 26 4d 91 5b 18 b0 54 4a 35 92 b5 7a 98 5a 54 08 72 9c bb a9 f0 a2 03 85 a7 66 79 04 ... 1922 more bytes>\n        },\n        list: [\n          'pro.openweathermap.org:443:::::::::::::::::::::',\n          'api.openweathermap.org:443:::::::::::::::::::::',\n          [length]: 2\n        ]\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    socketPath: undefined,\n    method: 'GET',\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    joinDuplicateHeaders: undefined,\n    path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n    _ended: true,\n    res: IncomingMessage {\n      _events: {\n        close: undefined,\n        error: [Function: handleStreamError] {\n          [length]: 1,\n          [name]: 'handleStreamError',\n          [prototype]: [Object]\n        },\n        data: [Function: handleStreamData] {\n          [length]: 1,\n          [name]: 'handleStreamData',\n          [prototype]: [Object]\n        },\n        end: [ [Function], [Function], [length]: 2 ],\n        readable: undefined,\n        finish: undefined,\n        aborted: [Function: handlerStreamAborted] {\n          [length]: 0,\n          [name]: 'handlerStreamAborted',\n          [prototype]: [Object]\n        }\n      },\n      _readableState: ReadableState {\n        highWaterMark: 16384,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 194779004,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _maxListeners: undefined,\n      socket: null,\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [\n        'Server',\n        'openresty',\n        'Date',\n        'Tue, 03 Jun 2025 17:57:29 GMT',\n        'Content-Type',\n        'application/json; charset=utf-8',\n        'Content-Length',\n        '40',\n        'Connection',\n        'keep-alive',\n        'X-Cache-Key',\n        '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n        'Access-Control-Allow-Origin',\n        '*',\n        'Access-Control-Allow-Credentials',\n        'true',\n        'Access-Control-Allow-Methods',\n        'GET, POST',\n        [length]: 18\n      ],\n      rawTrailers: [ [length]: 0 ],\n      joinDuplicateHeaders: undefined,\n      aborted: false,\n      upgrade: false,\n      url: '',\n      method: null,\n      statusCode: 404,\n      statusMessage: 'Not Found',\n      client: <ref *13> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'pro.openweathermap.org',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'pro.openweathermap.org',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 952054,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 3012,\n          [Symbol(triggerId)]: 3010,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: null,\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: 443,\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          _defaultAgent: [Agent],\n          host: 'pro.openweathermap.org',\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          servername: 'pro.openweathermap.org',\n          _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      _consuming: false,\n      _dumped: false,\n      req: [Circular *14],\n      _eventsCount: 4,\n      responseUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      redirects: [ [length]: 0 ],\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: {\n        server: 'openresty',\n        date: 'Tue, 03 Jun 2025 17:57:29 GMT',\n        'content-type': 'application/json; charset=utf-8',\n        'content-length': '40',\n        connection: 'keep-alive',\n        'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n        'access-control-allow-origin': '*',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-methods': 'GET, POST'\n      },\n      [Symbol(kHeadersCount)]: 18,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [connection]: [Getter/Setter],\n      [headers]: [Getter/Setter],\n      [headersDistinct]: [Getter/Setter],\n      [trailers]: [Getter/Setter],\n      [trailersDistinct]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableDidRead]: [Getter],\n      [readableAborted]: [Getter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readableEnded]: [Getter]\n    },\n    aborted: false,\n    timeoutCb: null,\n    upgradeOrConnect: false,\n    parser: null,\n    maxHeadersCount: null,\n    reusedSocket: false,\n    host: 'pro.openweathermap.org',\n    protocol: 'https:',\n    _redirectable: Writable {\n      _events: {\n        close: undefined,\n        error: [Function: handleRequestError] {\n          [length]: 1,\n          [name]: 'handleRequestError',\n          [prototype]: [Object]\n        },\n        prefinish: undefined,\n        finish: undefined,\n        drain: undefined,\n        response: [Function: handleResponse] {\n          [length]: 1,\n          [name]: 'handleResponse',\n          [prototype]: [Object]\n        },\n        socket: [Function: handleRequestSocket] {\n          [length]: 1,\n          [name]: 'handleRequestSocket',\n          [prototype]: [Object]\n        }\n      },\n      _writableState: WritableState {\n        highWaterMark: 16384,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 17580812,\n        [Symbol(kBufferedValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      _maxListeners: undefined,\n      _options: {\n        maxRedirects: 21,\n        maxBodyLength: Infinity,\n        protocol: 'https:',\n        path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        method: 'GET',\n        headers: [Object: null prototype] {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': 'axios/1.9.0',\n          'Accept-Encoding': 'gzip, compress, deflate, br'\n        },\n        agents: { http: undefined, https: undefined },\n        auth: undefined,\n        family: undefined,\n        beforeRedirect: [Function: dispatchBeforeRedirect] {\n          [length]: 2,\n          [name]: 'dispatchBeforeRedirect',\n          [prototype]: [Object]\n        },\n        beforeRedirects: { proxy: [Function] },\n        hostname: 'pro.openweathermap.org',\n        port: '',\n        agent: undefined,\n        nativeProtocols: { 'http:': [Object], 'https:': [Object] },\n        pathname: '/data/2.5/forecast/hourly',\n        search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en'\n      },\n      _ended: true,\n      _ending: true,\n      _redirectCount: 0,\n      _redirects: [ [length]: 0 ],\n      _requestBodyLength: 0,\n      _requestBodyBuffers: [ [length]: 0 ],\n      _eventsCount: 3,\n      _onNativeResponse: <ref *15> [Function (anonymous)] {\n        [length]: 1,\n        [name]: '',\n        [arguments]: null,\n        [caller]: null,\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      _currentRequest: [Circular *14],\n      _currentUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [aborted]: [Getter],\n      [connection]: [Getter],\n      [socket]: [Getter],\n      _writev: null,\n      [closed]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [writable]: [Getter/Setter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [writableLength]: [Getter],\n      [errored]: [Getter],\n      [writableAborted]: [Getter]\n    },\n    [Symbol(shapeMode)]: false,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n    [Symbol(kChunkedLength)]: 0,\n    [Symbol(kSocket)]: <ref *13> TLSSocket {\n      _tlsOptions: {\n        allowHalfOpen: undefined,\n        pipe: false,\n        secureContext: SecureContext { context: SecureContext {} },\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: true,\n        session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined,\n        enableTrace: undefined,\n        pskCallback: undefined,\n        highWaterMark: undefined,\n        onread: undefined,\n        signal: undefined\n      },\n      _secureEstablished: true,\n      _securePending: false,\n      _newSessionPending: false,\n      _controlReleased: true,\n      secureConnecting: false,\n      _SNICallback: null,\n      servername: 'pro.openweathermap.org',\n      alpnProtocol: false,\n      authorized: true,\n      authorizationError: null,\n      encrypted: true,\n      _events: [Object: null prototype] {\n        close: [ [Function], [Function], [Function], [length]: 3 ],\n        end: [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        error: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        newListener: [Function: keylogNewListener] {\n          [length]: 1,\n          [name]: 'keylogNewListener',\n          [prototype]: [Object]\n        },\n        connect: undefined,\n        secure: [Function: onConnectSecure] {\n          [length]: 0,\n          [name]: 'onConnectSecure',\n          [prototype]: [Object]\n        },\n        session: [Function (anonymous)] { [length]: 1, [name]: '' },\n        free: [Function: onFree] {\n          [length]: 0,\n          [name]: 'onFree',\n          [prototype]: [Object]\n        },\n        timeout: [Function: onTimeout] {\n          [length]: 0,\n          [name]: 'onTimeout',\n          [prototype]: [Object]\n        },\n        agentRemove: [Function: onRemove] {\n          [length]: 0,\n          [name]: 'onRemove',\n          [prototype]: [Object]\n        },\n        data: undefined,\n        drain: undefined\n      },\n      _eventsCount: 9,\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: 'pro.openweathermap.org',\n      _closeAfterHandlingError: false,\n      _readableState: ReadableState {\n        highWaterMark: 16384,\n        buffer: [ [length]: 0 ],\n        bufferIndex: 0,\n        length: 0,\n        pipes: [ [length]: 0 ],\n        awaitDrainWriters: null,\n        [Symbol(kState)]: 60303620,\n        [objectMode]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [endEmitted]: [Getter/Setter],\n        [reading]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [needReadable]: [Getter/Setter],\n        [emittedReadable]: [Getter/Setter],\n        [readableListening]: [Getter/Setter],\n        [resumeScheduled]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [multiAwaitDrain]: [Getter/Setter],\n        [readingMore]: [Getter/Setter],\n        [dataEmitted]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [decoder]: [Getter/Setter],\n        [encoding]: [Getter/Setter],\n        [flowing]: [Getter/Setter],\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      _writableState: WritableState {\n        highWaterMark: 16384,\n        length: 0,\n        corked: 0,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writelen: 0,\n        bufferedIndex: 0,\n        pendingcb: 0,\n        [Symbol(kState)]: 17563908,\n        [Symbol(kBufferedValue)]: null,\n        [Symbol(kWriteCbValue)]: null,\n        [objectMode]: [Getter/Setter],\n        [finalCalled]: [Getter/Setter],\n        [needDrain]: [Getter/Setter],\n        [ending]: [Getter/Setter],\n        [ended]: [Getter/Setter],\n        [finished]: [Getter/Setter],\n        [destroyed]: [Getter/Setter],\n        [decodeStrings]: [Getter/Setter],\n        [writing]: [Getter/Setter],\n        [sync]: [Getter/Setter],\n        [bufferProcessing]: [Getter/Setter],\n        [constructed]: [Getter/Setter],\n        [prefinished]: [Getter/Setter],\n        [errorEmitted]: [Getter/Setter],\n        [emitClose]: [Getter/Setter],\n        [autoDestroy]: [Getter/Setter],\n        [closed]: [Getter/Setter],\n        [closeEmitted]: [Getter/Setter],\n        [allBuffers]: [Getter/Setter],\n        [allNoop]: [Getter/Setter],\n        [errored]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [defaultEncoding]: [Getter/Setter],\n        [writecb]: [Getter/Setter],\n        [afterWriteTickInfo]: [Getter/Setter],\n        [buffered]: [Getter/Setter],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: false,\n      _maxListeners: undefined,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: undefined,\n      _server: null,\n      ssl: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      _requestCert: true,\n      _rejectUnauthorized: true,\n      timeout: 5000,\n      parser: null,\n      _httpMessage: null,\n      [Symbol(alpncallback)]: null,\n      [Symbol(res)]: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      [Symbol(verified)]: true,\n      [Symbol(pendingSession)]: null,\n      [Symbol(async_id_symbol)]: -1,\n      [Symbol(kHandle)]: TLSWrap {\n        _parent: TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *13],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _parentWrap: null,\n        _secureContext: SecureContext { context: SecureContext {} },\n        reading: true,\n        onkeylog: [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: [Function: noop] { [length]: 0, [name]: 'noop' },\n        onhandshakedone: [Function (anonymous)] { [length]: 0, [name]: '' },\n        onocspresponse: [Function: onocspresponse] {\n          [length]: 1,\n          [name]: 'onocspresponse',\n          [prototype]: [Object]\n        },\n        onnewsession: [Function: onnewsessionclient] {\n          [length]: 2,\n          [name]: 'onnewsessionclient',\n          [prototype]: [Object]\n        },\n        onerror: [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *13],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true,\n        [onread]: [Getter/Setter]\n      },\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 5000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 952054,\n        _onTimeout: [Function],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 3012,\n        [Symbol(triggerId)]: 3010,\n        [Symbol(kAsyncContextFrame)]: undefined\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(shapeMode)]: true,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: true,\n      [Symbol(kSetKeepAliveInitialDelay)]: 1,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(connect-options)]: {\n        rejectUnauthorized: true,\n        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity] {\n          [length]: 2,\n          [name]: 'checkServerIdentity',\n          [prototype]: [Object]\n        },\n        minDHSize: 1024,\n        session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n        maxRedirects: 21,\n        maxBodyLength: Infinity,\n        protocol: 'https:',\n        path: null,\n        method: 'GET',\n        headers: [Object: null prototype] {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': 'axios/1.9.0',\n          'Accept-Encoding': 'gzip, compress, deflate, br'\n        },\n        agents: { http: undefined, https: undefined },\n        auth: undefined,\n        family: undefined,\n        beforeRedirect: [Function: dispatchBeforeRedirect] {\n          [length]: 2,\n          [name]: 'dispatchBeforeRedirect',\n          [prototype]: [Object]\n        },\n        beforeRedirects: { proxy: [Function] },\n        hostname: 'pro.openweathermap.org',\n        port: 443,\n        agent: undefined,\n        nativeProtocols: { 'http:': [Object], 'https:': [Object] },\n        pathname: '/data/2.5/forecast/hourly',\n        search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        _defaultAgent: Agent {\n          _events: [Object: null prototype],\n          _eventsCount: 2,\n          _maxListeners: undefined,\n          defaultPort: 443,\n          protocol: 'https:',\n          options: [Object: null prototype],\n          requests: [Object: null prototype] {},\n          sockets: [Object: null prototype] {},\n          freeSockets: [Object: null prototype],\n          keepAliveMsecs: 1000,\n          keepAlive: true,\n          maxSockets: Infinity,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n          maxTotalSockets: Infinity,\n          totalSocketCount: 1,\n          maxCachedSessions: 100,\n          _sessionCache: [Object],\n          [Symbol(shapeMode)]: false,\n          [Symbol(kCapture)]: false\n        },\n        host: 'pro.openweathermap.org',\n        keepAlive: true,\n        scheduling: 'lifo',\n        timeout: 5000,\n        noDelay: true,\n        servername: 'pro.openweathermap.org',\n        _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n        encoding: null,\n        keepAliveInitialDelay: 1000\n      },\n      [_connecting]: [Getter],\n      [pending]: [Getter],\n      [readyState]: [Getter],\n      [bufferSize]: [Getter],\n      bytesRead: [Getter],\n      remoteAddress: [Getter],\n      remoteFamily: [Getter],\n      remotePort: [Getter],\n      localAddress: [Getter],\n      localPort: [Getter],\n      localFamily: [Getter],\n      _bytesDispatched: [Getter],\n      bytesWritten: [Getter],\n      [_handle]: [Getter/Setter],\n      [Symbol(kUpdateTimer)]: [Getter],\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      accept: [ 'Accept', 'application/json, text/plain, */*', [length]: 2 ],\n      'user-agent': [ 'User-Agent', 'axios/1.9.0', [length]: 2 ],\n      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br', [length]: 2 ],\n      host: [ 'Host', 'pro.openweathermap.org', [length]: 2 ]\n    },\n    [Symbol(errored)]: null,\n    [Symbol(kHighWaterMark)]: 16384,\n    [Symbol(kRejectNonStandardBodyWrites)]: false,\n    [Symbol(kUniqueHeaders)]: null,\n    [errored]: [Getter],\n    [closed]: [Getter],\n    [writableFinished]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableLength]: [Getter],\n    [writableHighWaterMark]: [Getter],\n    [writableCorked]: [Getter],\n    [_headers]: [Getter/Setter],\n    [connection]: [Getter/Setter],\n    [socket]: [Getter/Setter],\n    [_headerNames]: [Getter/Setter],\n    headersSent: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter]\n  },\n  response: {\n    status: 404,\n    statusText: 'Not Found',\n    headers: Object [AxiosHeaders] {\n      server: 'openresty',\n      date: 'Tue, 03 Jun 2025 17:57:29 GMT',\n      'content-type': 'application/json; charset=utf-8',\n      'content-length': '40',\n      connection: 'keep-alive',\n      'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n      'access-control-allow-origin': '*',\n      'access-control-allow-credentials': 'true',\n      'access-control-allow-methods': 'GET, POST',\n      [set]: [Getter/Setter],\n      [get]: [Getter/Setter],\n      [has]: [Getter/Setter],\n      [delete]: [Getter/Setter],\n      [clear]: [Getter/Setter],\n      [normalize]: [Getter/Setter],\n      [concat]: [Getter/Setter],\n      [toJSON]: [Getter/Setter],\n      [toString]: [Getter/Setter],\n      [getSetCookie]: [Getter/Setter],\n      [getContentType]: [Getter/Setter],\n      [setContentType]: [Getter/Setter],\n      [hasContentType]: [Getter/Setter],\n      [getContentLength]: [Getter/Setter],\n      [setContentLength]: [Getter/Setter],\n      [hasContentLength]: [Getter/Setter],\n      [getAccept]: [Getter/Setter],\n      [setAccept]: [Getter/Setter],\n      [hasAccept]: [Getter/Setter],\n      [getAcceptEncoding]: [Getter/Setter],\n      [setAcceptEncoding]: [Getter/Setter],\n      [hasAcceptEncoding]: [Getter/Setter],\n      [getUserAgent]: [Getter/Setter],\n      [setUserAgent]: [Getter/Setter],\n      [hasUserAgent]: [Getter/Setter],\n      [getAuthorization]: [Getter/Setter],\n      [setAuthorization]: [Getter/Setter],\n      [hasAuthorization]: [Getter/Setter],\n      [Symbol(Symbol.toStringTag)]: [Getter]\n    },\n    config: {\n      transitional: {\n        silentJSONParsing: true,\n        forcedJSONParsing: true,\n        clarifyTimeoutError: false\n      },\n      adapter: [ 'xhr', 'http', 'fetch', [length]: 3 ],\n      transformRequest: [\n        <ref *1> [Function: transformRequest] {\n          [length]: 2,\n          [name]: 'transformRequest',\n          [prototype]: [Object]\n        },\n        [length]: 1\n      ],\n      transformResponse: [\n        <ref *2> [Function: transformResponse] {\n          [length]: 1,\n          [name]: 'transformResponse',\n          [prototype]: [Object]\n        },\n        [length]: 1\n      ],\n      timeout: 0,\n      xsrfCookieName: 'XSRF-TOKEN',\n      xsrfHeaderName: 'X-XSRF-TOKEN',\n      maxContentLength: -1,\n      maxBodyLength: -1,\n      env: {\n        FormData: <ref *3> [Function: FormData] {\n          [length]: 1,\n          [name]: 'FormData',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [CombinedStream],\n          [super_]: [Function],\n          LINE_BREAK: '\\r\\n',\n          DEFAULT_CONTENT_TYPE: 'application/octet-stream',\n          [Symbol(Symbol.toStringTag)]: 'FormData'\n        },\n        Blob: <ref *4> [class Blob] {\n          [length]: 0,\n          [name]: 'Blob',\n          [prototype]: [Object]\n        }\n      },\n      validateStatus: <ref *5> [Function: validateStatus] {\n        [length]: 1,\n        [name]: 'validateStatus',\n        [prototype]: { [constructor]: [Circular *5] }\n      },\n      headers: Object [AxiosHeaders] {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': undefined,\n        'User-Agent': 'axios/1.9.0',\n        'Accept-Encoding': 'gzip, compress, deflate, br',\n        [set]: [Getter/Setter],\n        [get]: [Getter/Setter],\n        [has]: [Getter/Setter],\n        [delete]: [Getter/Setter],\n        [clear]: [Getter/Setter],\n        [normalize]: [Getter/Setter],\n        [concat]: [Getter/Setter],\n        [toJSON]: [Getter/Setter],\n        [toString]: [Getter/Setter],\n        [getSetCookie]: [Getter/Setter],\n        [getContentType]: [Getter/Setter],\n        [setContentType]: [Getter/Setter],\n        [hasContentType]: [Getter/Setter],\n        [getContentLength]: [Getter/Setter],\n        [setContentLength]: [Getter/Setter],\n        [hasContentLength]: [Getter/Setter],\n        [getAccept]: [Getter/Setter],\n        [setAccept]: [Getter/Setter],\n        [hasAccept]: [Getter/Setter],\n        [getAcceptEncoding]: [Getter/Setter],\n        [setAcceptEncoding]: [Getter/Setter],\n        [hasAcceptEncoding]: [Getter/Setter],\n        [getUserAgent]: [Getter/Setter],\n        [setUserAgent]: [Getter/Setter],\n        [hasUserAgent]: [Getter/Setter],\n        [getAuthorization]: [Getter/Setter],\n        [setAuthorization]: [Getter/Setter],\n        [hasAuthorization]: [Getter/Setter],\n        [Symbol(Symbol.toStringTag)]: [Getter]\n      },\n      params: {\n        q: 'Vilniussss',\n        appid: '7caca20ad4f3e11f4ab0ea0b56f9a0d7',\n        units: 'metric',\n        lang: 'en'\n      },\n      method: 'get',\n      url: 'https://pro.openweathermap.org/data/2.5/forecast/hourly',\n      allowAbsoluteUrls: true,\n      data: undefined\n    },\n    request: <ref *14> ClientRequest {\n      _events: [Object: null prototype] {\n        abort: <ref *6> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        aborted: <ref *7> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        connect: <ref *8> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        error: <ref *9> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        socket: <ref *10> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        timeout: <ref *11> [Function (anonymous)] {\n          [length]: 3,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        finish: <ref *12> [Function: requestOnFinish] {\n          [length]: 0,\n          [name]: 'requestOnFinish',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 7,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: true,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: true,\n      _header: 'GET /data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en HTTP/1.1\\r\\n' +\n        'Accept: application/json, text/plain, */*\\r\\n' +\n        'User-Agent: axios/1.9.0\\r\\n' +\n        'Accept-Encoding: gzip, compress, deflate, br\\r\\n' +\n        'Host: pro.openweathermap.org\\r\\n' +\n        'Connection: keep-alive\\r\\n' +\n        '\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop] { [length]: 0, [name]: 'nop' },\n      agent: Agent {\n        _events: [Object: null prototype] {\n          free: [Function],\n          newListener: [Function]\n        },\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object: null prototype] {\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          path: null\n        },\n        requests: [Object: null prototype] {},\n        sockets: [Object: null prototype] {},\n        freeSockets: [Object: null prototype] {\n          'pro.openweathermap.org:443:::::::::::::::::::::': [Array]\n        },\n        keepAliveMsecs: 1000,\n        keepAlive: true,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        scheduling: 'lifo',\n        maxTotalSockets: Infinity,\n        totalSocketCount: 1,\n        maxCachedSessions: 100,\n        _sessionCache: { map: [Object], list: [Array] },\n        [Symbol(shapeMode)]: false,\n        [Symbol(kCapture)]: false\n      },\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      joinDuplicateHeaders: undefined,\n      path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n      _ended: true,\n      res: IncomingMessage {\n        _events: {\n          close: undefined,\n          error: [Function],\n          data: [Function],\n          end: [Array],\n          readable: undefined,\n          finish: undefined,\n          aborted: [Function]\n        },\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 194779004,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _maxListeners: undefined,\n        socket: null,\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        rawHeaders: [\n          'Server',\n          'openresty',\n          'Date',\n          'Tue, 03 Jun 2025 17:57:29 GMT',\n          'Content-Type',\n          'application/json; charset=utf-8',\n          'Content-Length',\n          '40',\n          'Connection',\n          'keep-alive',\n          'X-Cache-Key',\n          '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n          'Access-Control-Allow-Origin',\n          '*',\n          'Access-Control-Allow-Credentials',\n          'true',\n          'Access-Control-Allow-Methods',\n          'GET, POST',\n          [length]: 18\n        ],\n        rawTrailers: [ [length]: 0 ],\n        joinDuplicateHeaders: undefined,\n        aborted: false,\n        upgrade: false,\n        url: '',\n        method: null,\n        statusCode: 404,\n        statusMessage: 'Not Found',\n        client: <ref *13> TLSSocket {\n          _tlsOptions: [Object],\n          _secureEstablished: true,\n          _securePending: false,\n          _newSessionPending: false,\n          _controlReleased: true,\n          secureConnecting: false,\n          _SNICallback: null,\n          servername: 'pro.openweathermap.org',\n          alpnProtocol: false,\n          authorized: true,\n          authorizationError: null,\n          encrypted: true,\n          _events: [Object: null prototype],\n          _eventsCount: 9,\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: 'pro.openweathermap.org',\n          _closeAfterHandlingError: false,\n          _readableState: [ReadableState],\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _maxListeners: undefined,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: undefined,\n          _server: null,\n          ssl: [TLSWrap],\n          _requestCert: true,\n          _rejectUnauthorized: true,\n          timeout: 5000,\n          parser: null,\n          _httpMessage: null,\n          [Symbol(alpncallback)]: null,\n          [Symbol(res)]: [TLSWrap],\n          [Symbol(verified)]: true,\n          [Symbol(pendingSession)]: null,\n          [Symbol(async_id_symbol)]: -1,\n          [Symbol(kHandle)]: [TLSWrap],\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: Timeout {\n            _idleTimeout: 5000,\n            _idlePrev: [TimersList],\n            _idleNext: [TimersList],\n            _idleStart: 952054,\n            _onTimeout: [Function],\n            _timerArgs: undefined,\n            _repeat: null,\n            _destroyed: false,\n            [Symbol(refed)]: false,\n            [Symbol(kHasPrimitive)]: false,\n            [Symbol(asyncId)]: 3012,\n            [Symbol(triggerId)]: 3010,\n            [Symbol(kAsyncContextFrame)]: undefined\n          },\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(shapeMode)]: true,\n          [Symbol(kCapture)]: false,\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(kSetKeepAlive)]: true,\n          [Symbol(kSetKeepAliveInitialDelay)]: 1,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [Symbol(connect-options)]: [Object],\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          localFamily: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter]\n        },\n        _consuming: false,\n        _dumped: false,\n        req: [Circular *14],\n        _eventsCount: 4,\n        responseUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        redirects: [ [length]: 0 ],\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kHeaders)]: {\n          server: 'openresty',\n          date: 'Tue, 03 Jun 2025 17:57:29 GMT',\n          'content-type': 'application/json; charset=utf-8',\n          'content-length': '40',\n          connection: 'keep-alive',\n          'x-cache-key': '/data/2.5/forecast/hourly?lang=en&q=vilniussss&units=metric',\n          'access-control-allow-origin': '*',\n          'access-control-allow-credentials': 'true',\n          'access-control-allow-methods': 'GET, POST'\n        },\n        [Symbol(kHeadersCount)]: 18,\n        [Symbol(kTrailers)]: null,\n        [Symbol(kTrailersCount)]: 0,\n        [connection]: [Getter/Setter],\n        [headers]: [Getter/Setter],\n        [headersDistinct]: [Getter/Setter],\n        [trailers]: [Getter/Setter],\n        [trailersDistinct]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableDidRead]: [Getter],\n        [readableAborted]: [Getter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [errored]: [Getter],\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readableEnded]: [Getter]\n      },\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: null,\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'pro.openweathermap.org',\n      protocol: 'https:',\n      _redirectable: Writable {\n        _events: {\n          close: undefined,\n          error: [Function],\n          prefinish: undefined,\n          finish: undefined,\n          drain: undefined,\n          response: [Function],\n          socket: [Function]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17580812,\n          [Symbol(kBufferedValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        _maxListeners: undefined,\n        _options: {\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: '/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: '',\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en'\n        },\n        _ended: true,\n        _ending: true,\n        _redirectCount: 0,\n        _redirects: [ [length]: 0 ],\n        _requestBodyLength: 0,\n        _requestBodyBuffers: [ [length]: 0 ],\n        _eventsCount: 3,\n        _onNativeResponse: <ref *15> [Function (anonymous)] {\n          [length]: 1,\n          [name]: '',\n          [arguments]: null,\n          [caller]: null,\n          [prototype]: [Object]\n        },\n        _currentRequest: [Circular *14],\n        _currentUrl: 'https://pro.openweathermap.org/data/2.5/forecast/hourly?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [aborted]: [Getter],\n        [connection]: [Getter],\n        [socket]: [Getter],\n        _writev: null,\n        [closed]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [writable]: [Getter/Setter],\n        [writableFinished]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [writableHighWaterMark]: [Getter],\n        [writableCorked]: [Getter],\n        [writableLength]: [Getter],\n        [errored]: [Getter],\n        [writableAborted]: [Getter]\n      },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kChunkedBuffer)]: [ [length]: 0 ],\n      [Symbol(kChunkedLength)]: 0,\n      [Symbol(kSocket)]: <ref *13> TLSSocket {\n        _tlsOptions: {\n          allowHalfOpen: undefined,\n          pipe: false,\n          secureContext: [SecureContext],\n          isServer: false,\n          requestCert: true,\n          rejectUnauthorized: true,\n          session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n          ALPNProtocols: undefined,\n          requestOCSP: undefined,\n          enableTrace: undefined,\n          pskCallback: undefined,\n          highWaterMark: undefined,\n          onread: undefined,\n          signal: undefined\n        },\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        secureConnecting: false,\n        _SNICallback: null,\n        servername: 'pro.openweathermap.org',\n        alpnProtocol: false,\n        authorized: true,\n        authorizationError: null,\n        encrypted: true,\n        _events: [Object: null prototype] {\n          close: [Array],\n          end: [Function],\n          error: [Function],\n          newListener: [Function],\n          connect: undefined,\n          secure: [Function],\n          session: [Function],\n          free: [Function],\n          timeout: [Function],\n          agentRemove: [Function],\n          data: undefined,\n          drain: undefined\n        },\n        _eventsCount: 9,\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: 'pro.openweathermap.org',\n        _closeAfterHandlingError: false,\n        _readableState: ReadableState {\n          highWaterMark: 16384,\n          buffer: [Array],\n          bufferIndex: 0,\n          length: 0,\n          pipes: [Array],\n          awaitDrainWriters: null,\n          [Symbol(kState)]: 60303620,\n          [objectMode]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [endEmitted]: [Getter/Setter],\n          [reading]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [needReadable]: [Getter/Setter],\n          [emittedReadable]: [Getter/Setter],\n          [readableListening]: [Getter/Setter],\n          [resumeScheduled]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [multiAwaitDrain]: [Getter/Setter],\n          [readingMore]: [Getter/Setter],\n          [dataEmitted]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [decoder]: [Getter/Setter],\n          [encoding]: [Getter/Setter],\n          [flowing]: [Getter/Setter],\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        _writableState: WritableState {\n          highWaterMark: 16384,\n          length: 0,\n          corked: 0,\n          onwrite: [Function],\n          writelen: 0,\n          bufferedIndex: 0,\n          pendingcb: 0,\n          [Symbol(kState)]: 17563908,\n          [Symbol(kBufferedValue)]: null,\n          [Symbol(kWriteCbValue)]: null,\n          [objectMode]: [Getter/Setter],\n          [finalCalled]: [Getter/Setter],\n          [needDrain]: [Getter/Setter],\n          [ending]: [Getter/Setter],\n          [ended]: [Getter/Setter],\n          [finished]: [Getter/Setter],\n          [destroyed]: [Getter/Setter],\n          [decodeStrings]: [Getter/Setter],\n          [writing]: [Getter/Setter],\n          [sync]: [Getter/Setter],\n          [bufferProcessing]: [Getter/Setter],\n          [constructed]: [Getter/Setter],\n          [prefinished]: [Getter/Setter],\n          [errorEmitted]: [Getter/Setter],\n          [emitClose]: [Getter/Setter],\n          [autoDestroy]: [Getter/Setter],\n          [closed]: [Getter/Setter],\n          [closeEmitted]: [Getter/Setter],\n          [allBuffers]: [Getter/Setter],\n          [allNoop]: [Getter/Setter],\n          [errored]: [Getter/Setter],\n          [writable]: [Getter/Setter],\n          [defaultEncoding]: [Getter/Setter],\n          [writecb]: [Getter/Setter],\n          [afterWriteTickInfo]: [Getter/Setter],\n          [buffered]: [Getter/Setter],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _maxListeners: undefined,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        _requestCert: true,\n        _rejectUnauthorized: true,\n        timeout: 5000,\n        parser: null,\n        _httpMessage: null,\n        [Symbol(alpncallback)]: null,\n        [Symbol(res)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(verified)]: true,\n        [Symbol(pendingSession)]: null,\n        [Symbol(async_id_symbol)]: -1,\n        [Symbol(kHandle)]: TLSWrap {\n          _parent: [TCP],\n          _parentWrap: null,\n          _secureContext: [SecureContext],\n          reading: true,\n          onkeylog: [Function],\n          onhandshakestart: [Function],\n          onhandshakedone: [Function],\n          onocspresponse: [Function],\n          onnewsession: [Function],\n          onerror: [Function],\n          [Symbol(owner_symbol)]: [Circular *13],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true,\n          [onread]: [Getter/Setter]\n        },\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: Timeout {\n          _idleTimeout: 5000,\n          _idlePrev: [TimersList],\n          _idleNext: [TimersList],\n          _idleStart: 952054,\n          _onTimeout: [Function],\n          _timerArgs: undefined,\n          _repeat: null,\n          _destroyed: false,\n          [Symbol(refed)]: false,\n          [Symbol(kHasPrimitive)]: false,\n          [Symbol(asyncId)]: 3012,\n          [Symbol(triggerId)]: 3010,\n          [Symbol(kAsyncContextFrame)]: undefined\n        },\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(shapeMode)]: true,\n        [Symbol(kCapture)]: false,\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(kSetKeepAlive)]: true,\n        [Symbol(kSetKeepAliveInitialDelay)]: 1,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [Symbol(connect-options)]: {\n          rejectUnauthorized: true,\n          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n          checkServerIdentity: [Function],\n          minDHSize: 1024,\n          session: <Buffer 30 82 07 b1 02 01 01 02 02 03 04 04 02 13 02 04 20 59 d0 eb a0 5e bb f0 15 86 09 03 74 92 01 a7 c4 a6 a9 f9 8e 4c 52 e7 30 2e 7b 47 8e 91 71 5a e2 04 ... 1923 more bytes>,\n          maxRedirects: 21,\n          maxBodyLength: Infinity,\n          protocol: 'https:',\n          path: null,\n          method: 'GET',\n          headers: [Object: null prototype],\n          agents: [Object],\n          auth: undefined,\n          family: undefined,\n          beforeRedirect: [Function],\n          beforeRedirects: [Object],\n          hostname: 'pro.openweathermap.org',\n          port: 443,\n          agent: undefined,\n          nativeProtocols: [Object],\n          pathname: '/data/2.5/forecast/hourly',\n          search: '?q=Vilniussss&appid=7caca20ad4f3e11f4ab0ea0b56f9a0d7&units=metric&lang=en',\n          _defaultAgent: [Agent],\n          host: 'pro.openweathermap.org',\n          keepAlive: true,\n          scheduling: 'lifo',\n          timeout: 5000,\n          noDelay: true,\n          servername: 'pro.openweathermap.org',\n          _agentKey: 'pro.openweathermap.org:443:::::::::::::::::::::',\n          encoding: null,\n          keepAliveInitialDelay: 1000\n        },\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        localFamily: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter]\n      },\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        accept: [ 'Accept', 'application/json, text/plain, */*', [length]: 2 ],\n        'user-agent': [ 'User-Agent', 'axios/1.9.0', [length]: 2 ],\n        'accept-encoding': [\n          'Accept-Encoding',\n          'gzip, compress, deflate, br',\n          [length]: 2\n        ],\n        host: [ 'Host', 'pro.openweathermap.org', [length]: 2 ]\n      },\n      [Symbol(errored)]: null,\n      [Symbol(kHighWaterMark)]: 16384,\n      [Symbol(kRejectNonStandardBodyWrites)]: false,\n      [Symbol(kUniqueHeaders)]: null,\n      [errored]: [Getter],\n      [closed]: [Getter],\n      [writableFinished]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableLength]: [Getter],\n      [writableHighWaterMark]: [Getter],\n      [writableCorked]: [Getter],\n      [_headers]: [Getter/Setter],\n      [connection]: [Getter/Setter],\n      [socket]: [Getter/Setter],\n      [_headerNames]: [Getter/Setter],\n      headersSent: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter]\n    },\n    data: { cod: '404', message: 'city not found' }\n  },\n  status: 404,\n  [isAxiosError]: true\n}","timestamp":"2025-06-03T17:57:29.873Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:29 +0000] \"GET /api/forecast/hourly/Vilniussss HTTP/1.1\" 500 89 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:29.907Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:35 +0000] \"GET /api/cities?query=Vilniusss HTTP/1.1\" 200 2 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:35.039Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:35 +0000] \"GET /api/cities?query=Vilniuss HTTP/1.1\" 304 - \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:35.206Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:35 +0000] \"GET /api/cities?query=Vilnius HTTP/1.1\" 304 - \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:35.374Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:36 +0000] \"GET /api/cities?query=ak HTTP/1.1\" 200 375 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:36.407Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:37 +0000] \"GET /api/cities?query=ka HTTP/1.1\" 200 441 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:37.214Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:37 +0000] \"GET /api/cities?query=kau HTTP/1.1\" 200 379 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:37.318Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:37 +0000] \"GET /api/cities?query=kaun HTTP/1.1\" 200 356 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:37.416Z"}
{"level":"info","message":"Hourly forecast requested for city: Kaunas","timestamp":"2025-06-03T17:57:38.472Z"}
{"level":"info","message":"Hourly forecast response sent for city: Kaunas","timestamp":"2025-06-03T17:57:38.660Z"}
{"level":"info","message":"::1 - - [03/Jun/2025:17:57:38 +0000] \"GET /api/forecast/hourly/Kaunas HTTP/1.1\" 200 38288 \"http://localhost:5173/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\"","timestamp":"2025-06-03T17:57:38.664Z"}
